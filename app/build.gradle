apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'jacoco'

apply from: "../artifacts.gradle"

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        csv.enabled false
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']

    def debugTree = fileTree(dir: "${buildDir}/intermediates/app_classes/debug/bundleDebugClasses", excludes: fileFilter)
//    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
//    def debugTree_1 = fileTree(dir: "${buildDir}/intermediates/jacoco_instrumented_classes/debug/jacocoDebug/out", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/debugAndroidTest/connected/*coverage.ec"
    ])
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "dev.jriley.nyt"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {

        debug {
            minifyEnabled false
            testCoverageEnabled true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {

        String sharedTestDir = 'src/sharedTest/kotlin'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDirs sharedTestDir
//            assets.srcDirs += files("$projectDir/schemas".toString())
        }
    }

    testOptions {
//        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    tasks.matching { it instanceof Test }.all {
        testLogging.events = ["failed", "passed", "skipped"]
    }
}

final retrofit2_version = '2.3.0'
final room_version = "2.0.0"
dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.google.dagger:dagger:2.13'
    kapt 'com.google.dagger:dagger-compiler:2.13'

    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "com.google.android.material:material:1.0.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"
    kapt "androidx.lifecycle:lifecycle-compiler:2.0.0"

    implementation "com.squareup.retrofit2:retrofit:${retrofit2_version}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofit2_version}"
    implementation("com.squareup.moshi:moshi-kotlin:1.8.0")
    implementation 'com.squareup.retrofit2:converter-moshi:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.7'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'

    implementation 'com.jakewharton.timber:timber:4.7.0'

    implementation "androidx.room:room-runtime:${room_version}"
    implementation "androidx.room:room-rxjava2:${room_version}"
    annotationProcessor "androidx.room:room-compiler:${room_version}"
    kapt "androidx.room:room-compiler:${room_version}"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.19.0"
    testImplementation "com.nhaarman:mockito-kotlin:1.5.0"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}"

    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation "androidx.room:room-testing:${room_version}"
    androidTestImplementation 'androidx.arch.core:core-testing:2.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
}
